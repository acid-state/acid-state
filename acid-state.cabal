Name:                acid-state
Version:             0.15.0
Synopsis:            Add ACID guarantees to any serializable Haskell data structure.
Description:         Use regular Haskell data structures as your database and get stronger ACID guarantees than most RDBMS offer.
Homepage:            https://github.com/acid-state/acid-state
License:             PublicDomain
Author:              David Himmelstrup
Maintainer:          Lemmih <lemmih@gmail.com>
-- Copyright:
Category:            Database
Build-type:          Simple
Cabal-version:       >=1.10
tested-with:         GHC == 7.6.3, GHC == 7.8.4, GHC == 7.10.3, GHC == 8.0.1, GHC == 8.2.2, GHC == 8.4.1
Extra-source-files:
        CHANGELOG.md
        examples/*.hs
        examples/errors/*.hs
        src-win32/*.hs
        src-unix/*.hs

Source-repository head
  type:          git
  location:      https://github.com/acid-state/acid-state

Library
  Exposed-Modules:     Data.Acid,
                       Data.Acid.Archive,
                       Data.Acid.Local, Data.Acid.Memory,
                       Data.Acid.Memory.Pure, Data.Acid.Remote,
                       Data.Acid.Advanced,
                       Data.Acid.Log, Data.Acid.CRC,
                       Data.Acid.Abstract, Data.Acid.Core,
                       Data.Acid.TemplateHaskell

  Other-modules:       Paths_acid_state,
                       Data.Acid.Common, FileIO

  Build-depends:       array,
                       base >= 4.5.1.0 && < 5,
                       bytestring >= 0.10.2,
                       cereal >= 0.4.1.0,
                       containers,
                       extensible-exceptions,
                       safecopy >= 0.6,
                       stm >= 2.4,
                       directory,
                       filelock,
                       filepath,
                       mtl,
                       network,
                       template-haskell,
                       th-expand-syns

  if os(windows)
     Build-depends:       Win32
  else
     Build-depends:       unix

  Hs-Source-Dirs:      src/

  if os(windows)
     Hs-Source-Dirs:   src-win32/
  else
     Hs-Source-Dirs:   src-unix/

  default-language:    Haskell2010
  GHC-Options:         -fwarn-unused-imports -fwarn-unused-binds

test-suite specs
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  build-depends:       base
                     , acid-state
                     , deepseq
                     , hspec
                     , hspec-discover
                     , mtl
                     , safecopy
                     , template-haskell
  build-tool-depends: hspec-discover:hspec-discover
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
  other-modules:       Data.Acid.TemplateHaskellSpec
  default-language:    Haskell2010


benchmark loading-benchmark
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    benchmarks/loading
  main-is:
    Benchmark.hs
  other-modules:
    Benchmark.FileSystem
    Benchmark.Model
    Benchmark.Prelude
  build-depends:
    random,
    directory,
    system-fileio == 0.3.*,
    system-filepath,
    criterion >= 0.8 && < 1.5,
    mtl,
    base,
    acid-state
  default-language:
    Haskell2010
  default-extensions:
    PatternGuards
    GADTs
    StandaloneDeriving
    MultiParamTypeClasses
    ScopedTypeVariables
    FlexibleInstances
    TypeFamilies
    TypeOperators
    FlexibleContexts
    NoImplicitPrelude
    EmptyDataDecls
    DataKinds
    NoMonomorphismRestriction
    RankNTypes
    ConstraintKinds
    DefaultSignatures
    TupleSections
    TemplateHaskell
    OverloadedStrings
    DeriveDataTypeable
  ghc-options:
    -O2
